-- üö® CORRE√á√ÉO CR√çTICA DE SEGURAN√áA: Sistema de Aprova√ß√£o
-- Data: 2025-10-13
-- Problema: Novos usu√°rios eram aprovados automaticamente

-- 1. Atualizar fun√ß√£o de cria√ß√£o de perfil para definir status='pending' explicitamente
CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER SET search_path = public
AS $$
BEGIN
  -- SEGURAN√áA: Inserir com status='pending' EXPLICITAMENTE
  INSERT INTO public.profiles (id, display_name, status)
  VALUES (
    new.id, 
    new.raw_user_meta_data->>'display_name',
    'pending'  -- ‚Üê CR√çTICO: Status pendente por padr√£o
  );
  
  -- Log de auditoria para novo usu√°rio
  INSERT INTO public.security_audit_logs (
    user_id,
    action,
    table_name,
    details
  ) VALUES (
    new.id,
    'user_registration',
    'profiles',
    jsonb_build_object(
      'email', new.email,
      'status', 'pending',
      'created_at', now()
    )
  );
  
  RETURN new;
END;
$$;

-- 2. Recriar o trigger para garantir que usa a nova fun√ß√£o
DROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
CREATE TRIGGER on_auth_user_created
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();

-- 3. ATEN√á√ÉO: N√£o vamos alterar usu√°rios existentes automaticamente
-- Apenas novos usu√°rios ter√£o status='pending'
-- Admins devem revisar manualmente os usu√°rios existentes

-- 4. Adicionar √≠ndice para queries de usu√°rios pendentes (performance)
CREATE INDEX IF NOT EXISTS idx_profiles_status_pending 
ON public.profiles(status) 
WHERE status = 'pending';

-- 5. Criar fun√ß√£o para notificar admins sobre novos cadastros
CREATE OR REPLACE FUNCTION public.notify_admin_new_user()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  admin_ids UUID[];
BEGIN
  -- Buscar todos os admins
  SELECT ARRAY_AGG(user_id) INTO admin_ids
  FROM public.user_roles
  WHERE role = 'admin';
  
  -- Registrar notifica√ß√£o para cada admin
  IF admin_ids IS NOT NULL THEN
    INSERT INTO public.security_audit_logs (
      user_id,
      action,
      table_name,
      record_id,
      details
    )
    SELECT 
      admin_id,
      'new_user_pending_approval',
      'profiles',
      NEW.id,
      jsonb_build_object(
        'new_user_id', NEW.id,
        'new_user_email', NEW.email,
        'display_name', NEW.display_name,
        'pending_approval', true
      )
    FROM UNNEST(admin_ids) AS admin_id;
  END IF;
  
  RETURN NEW;
END;
$$;

-- 6. Criar trigger para notifica√ß√£o
DROP TRIGGER IF EXISTS notify_admin_on_new_user ON public.profiles;
CREATE TRIGGER notify_admin_on_new_user
  AFTER INSERT ON public.profiles
  FOR EACH ROW
  WHEN (NEW.status = 'pending')
  EXECUTE FUNCTION public.notify_admin_new_user();

-- 7. Coment√°rio de seguran√ßa
COMMENT ON FUNCTION public.handle_new_user() IS 
'SEGURAN√áA: Cria perfil de usu√°rio com status=pending. 
Usu√°rios devem ser aprovados manualmente por administradores.
Vulnerabilidade corrigida em 2025-10-13.';

